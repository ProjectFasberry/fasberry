/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Int8 = ColumnType<string, bigint | number | string, bigint | number | string>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface AUTH {
  HASH: string;
  IP: string | null;
  ISSUEDTIME: Int8 | null;
  LOGINDATE: Int8 | null;
  LOGINIP: string | null;
  LOWERCASENICKNAME: string;
  NICKNAME: string;
  PREMIUMUUID: string | null;
  REGDATE: Int8 | null;
  TOTPTOKEN: string | null;
  UUID: string | null;
}

export interface Sessions {
  browser: string;
  created_at: Generated<Timestamp>;
  expires_at: Timestamp;
  id: Generated<number>;
  ip: string;
  nickname: string;
  token: string;
}

export interface SOCIAL {
  BLOCKED: boolean | null;
  DISCORD_ID: Int8 | null;
  LOWERCASENICKNAME: string;
  NOTIFY_ENABLED: boolean | null;
  TELEGRAM_ID: Int8 | null;
  TOTP_ENABLED: boolean | null;
  VK_ID: Int8 | null;
}

export interface DB {
  AUTH: AUTH;
  sessions: Sessions;
  SOCIAL: SOCIAL;
}
