/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Int8 = ColumnType<string, bigint | number | string, bigint | number | string>;

export type Json = JsonValue;

export type JsonArray = JsonValue[];

export type JsonObject = {
  [x: string]: JsonValue | undefined;
};

export type JsonPrimitive = boolean | number | string | null;

export type JsonValue = JsonArray | JsonObject | JsonPrimitive;

export type PlayerActivityEvent = "join" | "quit";

export type StoreCurrency = "BELKOIN" | "CHARISM";

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface ActivityHeatmap {
  active_players: number;
  date: Timestamp;
  hour: number;
}

export interface ActivityUsers {
  event: Timestamp;
  id: Generated<Int8>;
  nickname: string;
  type: PlayerActivityEvent;
}

export interface AUTH {
  HASH: string;
  IP: string | null;
  ISSUEDTIME: Int8 | null;
  LOGINDATE: Int8 | null;
  LOGINIP: string | null;
  LOWERCASENICKNAME: string;
  NICKNAME: string;
  PREMIUMUUID: string | null;
  REGDATE: Int8 | null;
  TOTPTOKEN: string | null;
  UUID: string | null;
}

export interface Banners {
  created_at: Generated<Timestamp>;
  description: string | null;
  href_title: string;
  href_value: string;
  id: Generated<number>;
  title: string;
}

export interface BannersViews {
  banner_id: number | null;
  id: Generated<number>;
  nickname: string;
}

export interface Currencies {
  id: Generated<number>;
  imageUrl: string;
  isAvailable: Generated<boolean>;
  isPublic: Generated<boolean>;
  title: string;
  value: string;
}

export interface Events {
  created_at: Generated<Timestamp | null>;
  description: string;
  id: Generated<number>;
  origin: string;
  reward: string | null;
  title: string;
}

export interface EventsOriginal {
  id: Generated<number>;
  type: string;
}

export interface Facts {
  fact: string;
  id: Generated<number>;
}

export interface Findout {
  id: Generated<number>;
  nickname: string;
  value: string;
}

export interface FvItems {
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  item_id: number;
  nickname: string;
}

export interface IpList {
  id: Generated<number>;
  ip: string;
  name: string;
}

export interface Items {
  description: string | null;
  id: Generated<number>;
  image: string;
  title: string;
}

export interface Likes {
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  initiator: string;
  recipient: string;
}

export interface Modpacks {
  client: string;
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  imageUrl: string;
  mods: string;
  name: string;
  shaders: string | null;
  version: string;
}

export interface News {
  created_at: Generated<Timestamp>;
  description: string;
  id: Generated<number>;
  imageUrl: string;
  media_links: string | null;
  tags: string | null;
  title: string;
}

export interface NewsViews {
  id: Generated<number>;
  initiator: string;
  news_id: number;
}

export interface Options {
  id: Generated<number>;
  name: string;
  title: string;
  value: boolean;
}

export interface PaymentMethods {
  description: string | null;
  id: Generated<number>;
  imageUrl: string;
  isAvailable: Generated<boolean>;
  title: string;
  value: string;
}

export interface Permissions {
  id: Generated<number>;
  name: string;
}

export interface Players {
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  lower_case_nickname: string;
  nickname: string;
  premium_uuid: string | null;
  role_id: Generated<number>;
  uuid: string;
}

export interface Referrals {
  completed: Generated<boolean>;
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  initiator: string;
  recipient: string;
}

export interface RolePermissions {
  permission_id: number;
  role_id: number;
}

export interface Roles {
  id: Generated<number>;
  name: string;
}

export interface Rules {
  id: Generated<number>;
  punishment: string | null;
  rule_list_id: string;
  subtitle: string | null;
  title: string;
}

export interface RulesTermins {
  article_desc: string;
  article_title: string;
  id: Generated<number>;
}

export interface SOCIAL {
  BLOCKED: boolean | null;
  DISCORD_ID: Int8 | null;
  LOWERCASENICKNAME: string;
  NOTIFY_ENABLED: boolean | null;
  TELEGRAM_ID: Int8 | null;
  TOTP_ENABLED: boolean | null;
  VK_ID: Int8 | null;
}

export interface StoreCartItems {
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  initiator: string;
  price_snapshot: string;
  product_id: number;
  quantity: number;
  recipient: string;
  selected: Generated<boolean>;
}

export interface StoreEconomy {
  description: string;
  id: Generated<number>;
  imageUrl: string;
  title: string;
  type: string;
  value: string;
}

export interface StoreItems {
  command: string | null;
  currency: StoreCurrency;
  description: Json | null;
  id: Generated<number>;
  imageUrl: string | null;
  price: Int8;
  summary: string;
  title: string;
  type: string;
  value: string;
}

export interface StorePromotions {
  ends_at: Generated<Timestamp | null>;
  id: string;
  item_id: number;
  priority: string;
  starts_at: Generated<Timestamp>;
  title: string;
  type: string;
  value: string;
}

export interface StorePromotionStyles {
  color: string;
  icon: string;
  label: string;
  type: string;
}

export interface Tasks {
  action_type: string;
  action_value: string | null;
  created_at: Generated<Timestamp>;
  description: string;
  expires: Timestamp | null;
  id: Generated<number>;
  reward_currency: string;
  reward_value: number;
  title: string;
}

export interface VotedUsers {
  created_at: Generated<Timestamp>;
  id: Generated<number>;
  nickname: string;
}

export interface DB {
  activity_heatmap: ActivityHeatmap;
  activity_users: ActivityUsers;
  AUTH: AUTH;
  banners: Banners;
  banners_views: BannersViews;
  currencies: Currencies;
  events: Events;
  events_original: EventsOriginal;
  facts: Facts;
  findout: Findout;
  fv_items: FvItems;
  ip_list: IpList;
  items: Items;
  likes: Likes;
  modpacks: Modpacks;
  news: News;
  news_views: NewsViews;
  options: Options;
  payment_methods: PaymentMethods;
  permissions: Permissions;
  players: Players;
  referrals: Referrals;
  role_permissions: RolePermissions;
  roles: Roles;
  rules: Rules;
  rules_termins: RulesTermins;
  SOCIAL: SOCIAL;
  store_cart_items: StoreCartItems;
  store_economy: StoreEconomy;
  store_items: StoreItems;
  store_promotion_styles: StorePromotionStyles;
  store_promotions: StorePromotions;
  tasks: Tasks;
  voted_users: VotedUsers;
}
